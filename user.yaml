- name: user
  hosts: user
  become: yes
  tasks:
    - name: disable old nodejs and enable nodejs
      ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y
    
    - name: install nodejs
      ansible.builtin.dnf:
        name: nodejs
        state: present
      
    - name: Create user
      ansible.builtin.user:
        name: roboshop

    - name: Create app directory
      ansible.builtin.file:
        path: /app
        state: directory
      
    - name: Download the application code 
      ansible.builtin.get_url:
        url: https://roboshop-builds.s3.amazonaws.com/user.zip
        dest: /tmp
    
    - name: extract user application
      ansible.builtin.unarchive:
        src: /tmp/user.zip
        dest: /app
        remote_src: yes

    - name: Install dependecies
      ansible.builtin.command: npm install
        args:
         chdir: /app
      
    - name: Copy user service
      ansible.builtin.copy:
        src: user.service
        dest: /etc/systemd/system/user.service

    - name: demon reload and start
      ansible.builtin.systemd_service:
        daemon_reload: true
    
    # let's start after the data is loaded

    - name: Copy mongodb repo
      ansible.builtin.copy:
        src: mongodb.repo
        dest: /etc/yum.repos.d/mongodb.repo

    - name: Install mongodb client
      ansible.builtin.package:
        name: mongodb-org-shell
        state: present
    
    - name: get the user count
      ansible.builtin.command: mongo --host mongodb.awsdevops.website --quiet --eval 'db = db.getSiblingDB("users"); db.users.count()'
      register: user_count

    - name: load user data
      ansible.builtin.command: mongo --host mongodb.awsdevops.website < /app/schema/user.js
      when: user_count.stdout == "0" 

    - name: start and enable user
      ansible.builtin.service:
        name: user
        state: restarted
        enabled: yes



    


